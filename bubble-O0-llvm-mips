
bubble.o:     file format elf32-tradbigmips


Disassembly of section .text:

00000000 <main>:
                        8, 8, 8, 9, 9, 11, 11, 12, 15, 15, 
                        15, 17, 17, 18, 19, 20, 21, 21, 21, 21, 
                        22, 22, 22, 24, 24, 25, 25, 31, 32, 35, 
                        36, 38, 41, 45, 47, 50, 51, 54, 55, 65}; 
int main()
{
   0:	27bdff00 	addiu	sp,sp,-256
   4:	afbf00fc 	sw	ra,252(sp)
   8:	afbe00f8 	sw	s8,248(sp)
   c:	03a0f021 	addu	s8,sp,zero
  //int counter = 0;
  int n = 50;
  10:	24020032 	addiu	v0,zero,50
  14:	afc2002c 	sw	v0,44(s8)
  int i, c, d, swap;
  int main_result = 0;
  18:	afc00018 	sw	zero,24(s8)
  int array[50] = {36, 38, 41, 24, 47, 50, 51, 32, 15, 65,
                    15, 21, 17, 18, 19, 20, 17, 21, 21, 21,
                    22, 54, 22, 45, 24, 25, 25, 31, 22, 35,
                    2, 0, 1, 1, 0, 2, 3, 4, 5, 6,
                    8, 8, 8, 9, 9, 11, 55, 12, 15, 11};
  1c:	3c020000 	lui	v0,0x0
  20:	27c40030 	addiu	a0,s8,48
  24:	244300c8 	addiu	v1,v0,200
  28:	240200c8 	addiu	v0,zero,200
  2c:	00602821 	addu	a1,v1,zero
  30:	00403021 	addu	a2,v0,zero
  34:	0c000000 	jal	0 <main>
  38:	00000000 	sll	zero,zero,0x0

    for (c = 0 ; c < ( n - 1 ); c++)
  3c:	afc00024 	sw	zero,36(s8)
  40:	08000049 	j	124 <main+0x124>
  44:	00000000 	sll	zero,zero,0x0
      {
        for (d = 0 ; d < n - c - 1; d++)
  48:	afc00020 	sw	zero,32(s8)
  4c:	0800003e 	j	f8 <main+0xf8>
  50:	00000000 	sll	zero,zero,0x0
        {
          if (array[d] > array[d+1]) /* For decreasing order use < */
  54:	8fc20020 	lw	v0,32(s8)
  58:	00021080 	sll	v0,v0,0x2
  5c:	27c30018 	addiu	v1,s8,24
  60:	00621021 	addu	v0,v1,v0
  64:	8c430018 	lw	v1,24(v0)
  68:	8fc20020 	lw	v0,32(s8)
  6c:	24420001 	addiu	v0,v0,1
  70:	00021080 	sll	v0,v0,0x2
  74:	27c40018 	addiu	a0,s8,24
  78:	00821021 	addu	v0,a0,v0
  7c:	8c420018 	lw	v0,24(v0)
  80:	0043102a 	slt	v0,v0,v1
  84:	10400019 	beqz	v0,ec <main+0xec>
  88:	00000000 	sll	zero,zero,0x0
          {
            swap       = array[d];
  8c:	8fc20020 	lw	v0,32(s8)
  90:	00021080 	sll	v0,v0,0x2
  94:	27c30018 	addiu	v1,s8,24
  98:	00621021 	addu	v0,v1,v0
  9c:	8c420018 	lw	v0,24(v0)
  a0:	afc2001c 	sw	v0,28(s8)
            array[d]   = array[d+1];
  a4:	8fc40020 	lw	a0,32(s8)
  a8:	8fc20020 	lw	v0,32(s8)
  ac:	24420001 	addiu	v0,v0,1
  b0:	00021080 	sll	v0,v0,0x2
  b4:	27c30018 	addiu	v1,s8,24
  b8:	00621021 	addu	v0,v1,v0
  bc:	8c430018 	lw	v1,24(v0)
  c0:	00041080 	sll	v0,a0,0x2
  c4:	27c40018 	addiu	a0,s8,24
  c8:	00821021 	addu	v0,a0,v0
  cc:	ac430018 	sw	v1,24(v0)
            array[d+1] = swap;
  d0:	8fc20020 	lw	v0,32(s8)
  d4:	24420001 	addiu	v0,v0,1
  d8:	00021080 	sll	v0,v0,0x2
  dc:	27c30018 	addiu	v1,s8,24
  e0:	00621021 	addu	v0,v1,v0
  e4:	8fc3001c 	lw	v1,28(s8)
  e8:	ac430018 	sw	v1,24(v0)
                    2, 0, 1, 1, 0, 2, 3, 4, 5, 6,
                    8, 8, 8, 9, 9, 11, 55, 12, 15, 11};

    for (c = 0 ; c < ( n - 1 ); c++)
      {
        for (d = 0 ; d < n - c - 1; d++)
  ec:	8fc20020 	lw	v0,32(s8)
  f0:	24420001 	addiu	v0,v0,1
  f4:	afc20020 	sw	v0,32(s8)
  f8:	8fc3002c 	lw	v1,44(s8)
  fc:	8fc20024 	lw	v0,36(s8)
 100:	00621023 	subu	v0,v1,v0
 104:	2443ffff 	addiu	v1,v0,-1
 108:	8fc20020 	lw	v0,32(s8)
 10c:	0043102a 	slt	v0,v0,v1
 110:	1440ffd0 	bnez	v0,54 <main+0x54>
 114:	00000000 	sll	zero,zero,0x0
                    15, 21, 17, 18, 19, 20, 17, 21, 21, 21,
                    22, 54, 22, 45, 24, 25, 25, 31, 22, 35,
                    2, 0, 1, 1, 0, 2, 3, 4, 5, 6,
                    8, 8, 8, 9, 9, 11, 55, 12, 15, 11};

    for (c = 0 ; c < ( n - 1 ); c++)
 118:	8fc20024 	lw	v0,36(s8)
 11c:	24420001 	addiu	v0,v0,1
 120:	afc20024 	sw	v0,36(s8)
 124:	8fc2002c 	lw	v0,44(s8)
 128:	2443ffff 	addiu	v1,v0,-1
 12c:	8fc20024 	lw	v0,36(s8)
 130:	0043102a 	slt	v0,v0,v1
 134:	1440ffc4 	bnez	v0,48 <main+0x48>
 138:	00000000 	sll	zero,zero,0x0
          }
          //counter = counter + 1;
        }
      }

    for (i = 0; i < 50; i++){
 13c:	afc00028 	sw	zero,40(s8)
 140:	08000065 	j	194 <main+0x194>
 144:	00000000 	sll	zero,zero,0x0

        main_result += (output[i] != array[i]);
 148:	8fc30028 	lw	v1,40(s8)
 14c:	3c020000 	lui	v0,0x0
 150:	00031880 	sll	v1,v1,0x2
 154:	24420000 	addiu	v0,v0,0
 158:	00621021 	addu	v0,v1,v0
 15c:	8c430000 	lw	v1,0(v0)
 160:	8fc20028 	lw	v0,40(s8)
 164:	00021080 	sll	v0,v0,0x2
 168:	27c40018 	addiu	a0,s8,24
 16c:	00821021 	addu	v0,a0,v0
 170:	8c420018 	lw	v0,24(v0)
 174:	00621026 	xor	v0,v1,v0
 178:	0002102b 	sltu	v0,zero,v0
 17c:	8fc30018 	lw	v1,24(s8)
 180:	00621021 	addu	v0,v1,v0
 184:	afc20018 	sw	v0,24(s8)
          }
          //counter = counter + 1;
        }
      }

    for (i = 0; i < 50; i++){
 188:	8fc20028 	lw	v0,40(s8)
 18c:	24420001 	addiu	v0,v0,1
 190:	afc20028 	sw	v0,40(s8)
 194:	8fc20028 	lw	v0,40(s8)
 198:	28420032 	slti	v0,v0,50
 19c:	1440ffea 	bnez	v0,148 <main+0x148>
 1a0:	00000000 	sll	zero,zero,0x0
        //printf("%d, ", array[i]);
    }
        //printf ("%d\n", main_result);
        //printf("%d\n", counter);

  return main_result;
 1a4:	8fc20018 	lw	v0,24(s8)
}
 1a8:	03c0e821 	addu	sp,s8,zero
 1ac:	8fbf00fc 	lw	ra,252(sp)
 1b0:	8fbe00f8 	lw	s8,248(sp)
 1b4:	27bd0100 	addiu	sp,sp,256
 1b8:	03e00008 	jr	ra
 1bc:	00000000 	sll	zero,zero,0x0

Disassembly of section .rodata:

00000000 <output>:
	...
   8:	00000001 	movf	zero,zero,$fcc0
   c:	00000001 	movf	zero,zero,$fcc0
  10:	00000002 	srl	zero,zero,0x0
  14:	00000002 	srl	zero,zero,0x0
  18:	00000003 	sra	zero,zero,0x0
  1c:	00000004 	sllv	zero,zero,zero
  20:	00000005 	0x5
  24:	00000006 	srlv	zero,zero,zero
  28:	00000008 	jr	zero
  2c:	00000008 	jr	zero
  30:	00000008 	jr	zero
  34:	00000009 	jalr	zero,zero
  38:	00000009 	jalr	zero,zero
  3c:	0000000b 	movn	zero,zero,zero
  40:	0000000b 	movn	zero,zero,zero
  44:	0000000c 	syscall
  48:	0000000f 	sync
  4c:	0000000f 	sync
  50:	0000000f 	sync
  54:	00000011 	mthi	zero
  58:	00000011 	mthi	zero
  5c:	00000012 	mflo	zero
  60:	00000013 	mtlo	zero
  64:	00000014 	0x14
  68:	00000015 	0x15
  6c:	00000015 	0x15
  70:	00000015 	0x15
  74:	00000015 	0x15
  78:	00000016 	0x16
  7c:	00000016 	0x16
  80:	00000016 	0x16
  84:	00000018 	mult	zero,zero
  88:	00000018 	mult	zero,zero
  8c:	00000019 	multu	zero,zero
  90:	00000019 	multu	zero,zero
  94:	0000001f 	0x1f
  98:	00000020 	add	zero,zero,zero
  9c:	00000023 	negu	zero,zero
  a0:	00000024 	and	zero,zero,zero
  a4:	00000026 	xor	zero,zero,zero
  a8:	00000029 	0x29
  ac:	0000002d 	0x2d
  b0:	0000002f 	0x2f
  b4:	00000032 	tlt	zero,zero
  b8:	00000033 	tltu	zero,zero
  bc:	00000036 	tne	zero,zero
  c0:	00000037 	0x37
  c4:	00000041 	0x41

000000c8 <C.0.1678>:
  c8:	00000024 	and	zero,zero,zero
  cc:	00000026 	xor	zero,zero,zero
  d0:	00000029 	0x29
  d4:	00000018 	mult	zero,zero
  d8:	0000002f 	0x2f
  dc:	00000032 	tlt	zero,zero
  e0:	00000033 	tltu	zero,zero
  e4:	00000020 	add	zero,zero,zero
  e8:	0000000f 	sync
  ec:	00000041 	0x41
  f0:	0000000f 	sync
  f4:	00000015 	0x15
  f8:	00000011 	mthi	zero
  fc:	00000012 	mflo	zero
 100:	00000013 	mtlo	zero
 104:	00000014 	0x14
 108:	00000011 	mthi	zero
 10c:	00000015 	0x15
 110:	00000015 	0x15
 114:	00000015 	0x15
 118:	00000016 	0x16
 11c:	00000036 	tne	zero,zero
 120:	00000016 	0x16
 124:	0000002d 	0x2d
 128:	00000018 	mult	zero,zero
 12c:	00000019 	multu	zero,zero
 130:	00000019 	multu	zero,zero
 134:	0000001f 	0x1f
 138:	00000016 	0x16
 13c:	00000023 	negu	zero,zero
 140:	00000002 	srl	zero,zero,0x0
 144:	00000000 	sll	zero,zero,0x0
 148:	00000001 	movf	zero,zero,$fcc0
 14c:	00000001 	movf	zero,zero,$fcc0
 150:	00000000 	sll	zero,zero,0x0
 154:	00000002 	srl	zero,zero,0x0
 158:	00000003 	sra	zero,zero,0x0
 15c:	00000004 	sllv	zero,zero,zero
 160:	00000005 	0x5
 164:	00000006 	srlv	zero,zero,zero
 168:	00000008 	jr	zero
 16c:	00000008 	jr	zero
 170:	00000008 	jr	zero
 174:	00000009 	jalr	zero,zero
 178:	00000009 	jalr	zero,zero
 17c:	0000000b 	movn	zero,zero,zero
 180:	00000037 	0x37
 184:	0000000c 	syscall
 188:	0000000f 	sync
 18c:	0000000b 	movn	zero,zero,zero
